package org.example.visitor;

import java.io.Serializable;

import _2010._02.tyviseadus_1_10.Aktinimi;
import _2010._02.tyviseadus_1_10.AlampunktType;
import _2010._02.tyviseadus_1_10.AlgatusmargeType;
import _2010._02.tyviseadus_1_10.AlljaotisType;
import _2010._02.tyviseadus_1_10.Allkiri;
import _2010._02.tyviseadus_1_10.AllkirjastajaType;
import _2010._02.tyviseadus_1_10.AnyURIID;
import _2010._02.tyviseadus_1_10.AvaldamismargeType;
import _2010._02.tyviseadus_1_10.Base64BinaryID;
import _2010._02.tyviseadus_1_10.ChangeType;
import _2010._02.tyviseadus_1_10.ChangestringID;
import _2010._02.tyviseadus_1_10.DateID;
import _2010._02.tyviseadus_1_10.GYearID;
import _2010._02.tyviseadus_1_10.Isik;
import _2010._02.tyviseadus_1_10.IsikType;
import _2010._02.tyviseadus_1_10.JaguType;
import _2010._02.tyviseadus_1_10.JalgiMuudatusi;
import _2010._02.tyviseadus_1_10.JaotisType;
import _2010._02.tyviseadus_1_10.JuurdepaasPiirangType;
import _2010._02.tyviseadus_1_10.KehtivusType;
import _2010._02.tyviseadus_1_10.Kommentaar;
import _2010._02.tyviseadus_1_10.LegaaldefinitsioonType;
import _2010._02.tyviseadus_1_10.LisaOsaType;
import _2010._02.tyviseadus_1_10.LisaType;
import _2010._02.tyviseadus_1_10.LisaViideType;
import _2010._02.tyviseadus_1_10.Loend;
import _2010._02.tyviseadus_1_10.LoigeType;
import _2010._02.tyviseadus_1_10.MetaandmedType;
import _2010._02.tyviseadus_1_10.MuuJaotisType;
import _2010._02.tyviseadus_1_10.MuutmismargeType;
import _2010._02.tyviseadus_1_10.NonNegativeIntegerID;
import _2010._02.tyviseadus_1_10.Normtehnmarkus;
import _2010._02.tyviseadus_1_10.Oigusakt;
import _2010._02.tyviseadus_1_10.OsaType;
import _2010._02.tyviseadus_1_10.ParagrahvType;
import _2010._02.tyviseadus_1_10.PealkiriType;
import _2010._02.tyviseadus_1_10.PeatykkType;
import _2010._02.tyviseadus_1_10.PiirangLoppType;
import _2010._02.tyviseadus_1_10.PiirangPikendamineType;
import _2010._02.tyviseadus_1_10.PreambulType;
import _2010._02.tyviseadus_1_10.PunktType;
import _2010._02.tyviseadus_1_10.SeletuskiriLisaType;
import _2010._02.tyviseadus_1_10.SeletuskiriOsaType;
import _2010._02.tyviseadus_1_10.SeletuskiriType;
import _2010._02.tyviseadus_1_10.SisuType;
import _2010._02.tyviseadus_1_10.StringID;
import _2010._02.tyviseadus_1_10.TabelType;
import _2010._02.tyviseadus_1_10.TavatekstID;
import _2010._02.tyviseadus_1_10.TekstType;
import _2010._02.tyviseadus_1_10.TimeID;
import _2010._02.tyviseadus_1_10.TypeID;
import _2010._02.tyviseadus_1_10.Valjakuulutamine;
import _2010._02.tyviseadus_1_10.ValjakuulutatudType;
import _2010._02.tyviseadus_1_10.VastuvoetudType;
import _2010._02.tyviseadus_1_10.VeaparandusType;
import _2010._02.tyviseadus_1_10.ViideType;

import jakarta.annotation.Generated;
import jakarta.xml.bind.JAXBElement;


@Generated("Generated by jaxb-visitor")
public class DepthFirstTraverserImpl<E extends Throwable>
        implements Traverser<E> {


    @Override
    public void traverse(Aktinimi aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getNimi() != null) {
            aBean.getNimi().accept(aVisitor);
        }
    }

    @Override
    public void traverse(AlampunktType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getAlampunktNr() != null) {
            aBean.getAlampunktNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        for (TekstType bean : aBean.getSisuTekst()) {
            bean.accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(AlampunktType.AlampunktNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(AlgatusmargeType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (ChangestringID bean : aBean.getAlgataja()) {
            bean.accept(aVisitor);
        }
        for (AlgatusmargeType.Esindaja bean : aBean.getEsindaja()) {
            bean.accept(aVisitor);
        }
        for (ChangestringID bean : aBean.getEsituskiriNr()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(AlgatusmargeType.Esindaja aBean, Visitor<?, E> aVisitor)
            throws E {
        for (AllkirjastajaType bean : aBean.getAllkiriEsindaja()) {
            bean.accept(aVisitor);
        }
        for (DateID bean : aBean.getKuupaevAllkiri()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(AlljaotisType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getAlljaotisNr() != null) {
            aBean.getAlljaotisNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getAlljaotisPealkiri() != null) {
            aBean.getAlljaotisPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (ParagrahvType bean : aBean.getParagrahv()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(AlljaotisType.AlljaotisNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(Allkiri aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getAllkiriKoht() != null) {
            aBean.getAllkiriKoht().accept(aVisitor);
        }
        if (aBean.getAllkirjastaja() != null) {
            aBean.getAllkirjastaja().accept(aVisitor);
        }
        if (aBean.getTavatekst() != null) {
            aBean.getTavatekst().accept(aVisitor);
        }
        if (aBean.getVeaparandus() != null) {
            aBean.getVeaparandus().accept(aVisitor);
        }
    }

    @Override
    public void traverse(AllkirjastajaType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getAmetinimetus() != null) {
            aBean.getAmetinimetus().accept(aVisitor);
        }
        if (aBean.getEesnimi() != null) {
            aBean.getEesnimi().accept(aVisitor);
        }
        if (aBean.getPerekonnanimi() != null) {
            aBean.getPerekonnanimi().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(AnyURIID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(AvaldamismargeType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getRTosa() != null) {
            aBean.getRTosa().accept(aVisitor);
        }
        if (aBean.getAvaldamineKuupaev() != null) {
            aBean.getAvaldamineKuupaev().accept(aVisitor);
        }
        if (aBean.getRTaasta() != null) {
            aBean.getRTaasta().accept(aVisitor);
        }
        if (aBean.getRTnr() != null) {
            aBean.getRTnr().accept(aVisitor);
        }
        if (aBean.getRTartikkel() != null) {
            aBean.getRTartikkel().accept(aVisitor);
        }
        if (aBean.getAktViide() != null) {
            aBean.getAktViide().accept(aVisitor);
        }
    }

    @Override
    public void traverse(AvaldamismargeType.RTosa aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(Base64BinaryID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(ChangeType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (Serializable bean : aBean.getContent()) {
            if (bean instanceof Visitable) {
                ((Visitable) bean).accept(aVisitor);
            } else {
                if (bean instanceof JAXBElement<?>) {
                    if (((JAXBElement<?>) bean).getValue() instanceof Visitable) {
                        ((Visitable) ((JAXBElement<?>) bean).getValue()).accept(aVisitor);
                    }
                }
            }
        }
    }

    @Override
    public void traverse(ChangestringID aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getTeostaja() instanceof Visitable) {
            ((Visitable) aBean.getTeostaja()).accept(aVisitor);
        }
    }

    @Override
    public void traverse(DateID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(GYearID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(Isik aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getAmetinimetus() != null) {
            aBean.getAmetinimetus().accept(aVisitor);
        }
        if (aBean.getEesnimi() != null) {
            aBean.getEesnimi().accept(aVisitor);
        }
        if (aBean.getPerekonnanimi() != null) {
            aBean.getPerekonnanimi().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(IsikType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getAmetinimetus() != null) {
            aBean.getAmetinimetus().accept(aVisitor);
        }
        if (aBean.getEesnimi() != null) {
            aBean.getEesnimi().accept(aVisitor);
        }
        if (aBean.getPerekonnanimi() != null) {
            aBean.getPerekonnanimi().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(JaguType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getJaguNr() != null) {
            aBean.getJaguNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getJaguPealkiri() != null) {
            aBean.getJaguPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (TypeID bean : aBean.getJaotisOrParagrahv()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(JaguType.JaguNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(JalgiMuudatusi aBean, Visitor<?, E> aVisitor)
            throws E {
        for (ChangeType bean : aBean.getMuutus()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(JaotisType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getJaotisNr() != null) {
            aBean.getJaotisNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getJaotisPealkiri() != null) {
            aBean.getJaotisPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (TypeID bean : aBean.getAlljaotisOrParagrahv()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(JaotisType.JaotisNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(JuurdepaasPiirangType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getTeabeValdaja() != null) {
            aBean.getTeabeValdaja().accept(aVisitor);
        }
        if (aBean.getPiirangAlgus() != null) {
            aBean.getPiirangAlgus().accept(aVisitor);
        }
        if (aBean.getPiirangLopp() != null) {
            aBean.getPiirangLopp().accept(aVisitor);
        }
        if (aBean.getPiirangAlus() != null) {
            aBean.getPiirangAlus().accept(aVisitor);
        }
        if (aBean.getPiirangPikendamine() != null) {
            aBean.getPiirangPikendamine().accept(aVisitor);
        }
        if (aBean.getPiirangKehtetuseAlgus() != null) {
            aBean.getPiirangKehtetuseAlgus().accept(aVisitor);
        }
        if (aBean.getPiirangKehtetuseAlus() != null) {
            aBean.getPiirangKehtetuseAlus().accept(aVisitor);
        }
    }

    @Override
    public void traverse(KehtivusType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getKehtivuseAlgus() != null) {
            aBean.getKehtivuseAlgus().accept(aVisitor);
        }
        if (aBean.getTavatekstAlgus() != null) {
            aBean.getTavatekstAlgus().accept(aVisitor);
        }
        if (aBean.getKehtivuseLopp() != null) {
            aBean.getKehtivuseLopp().accept(aVisitor);
        }
        if (aBean.getTavatekstLopp() != null) {
            aBean.getTavatekstLopp().accept(aVisitor);
        }
    }

    @Override
    public void traverse(Kommentaar aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getKommSisu() != null) {
            aBean.getKommSisu().accept(aVisitor);
        }
        if (aBean.getAutor() != null) {
            aBean.getAutor().accept(aVisitor);
        }
        if (aBean.getKommAeg() != null) {
            aBean.getKommAeg().accept(aVisitor);
        }
    }

    @Override
    public void traverse(LegaaldefinitsioonType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getMoiste() != null) {
            aBean.getMoiste().accept(aVisitor);
        }
        if (aBean.getMaaratlus() != null) {
            aBean.getMaaratlus().accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaOsaType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getOsaNr() != null) {
            aBean.getOsaNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getOsaPealkiri() != null) {
            aBean.getOsaPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (PunktType bean : aBean.getPunkt()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getLisaMarge() != null) {
            aBean.getLisaMarge().accept(aVisitor);
        }
        if (aBean.getLisaPealkiri() != null) {
            aBean.getLisaPealkiri().accept(aVisitor);
        }
        if (aBean.getLisaSisu() != null) {
            aBean.getLisaSisu().accept(aVisitor);
        }
        for (Normtehnmarkus bean : aBean.getNormtehnmarkus()) {
            bean.accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (AllkirjastajaType bean : aBean.getLisaAllkirjastaja()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaType.LisaMarge aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getValjaandja() != null) {
            aBean.getValjaandja().accept(aVisitor);
        }
        if (aBean.getKuupaev() != null) {
            aBean.getKuupaev().accept(aVisitor);
        }
        if (aBean.getDokumentLiik() != null) {
            aBean.getDokumentLiik().accept(aVisitor);
        }
        if (aBean.getAktiPealkiri() != null) {
            aBean.getAktiPealkiri().accept(aVisitor);
        }
        for (TavatekstID bean : aBean.getTavatekst()) {
            bean.accept(aVisitor);
        }
        if (aBean.getLisaNr() != null) {
            aBean.getLisaNr().accept(aVisitor);
        }
        if (aBean.getVeaparandus() != null) {
            aBean.getVeaparandus().accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaType.LisaPealkiri aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getLisaNimi() != null) {
            aBean.getLisaNimi().accept(aVisitor);
        }
        for (Normtehnmarkus bean : aBean.getNormtehnmarkus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getVeaparandus() != null) {
            aBean.getVeaparandus().accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaType.LisaSisu aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getPreambul() != null) {
            aBean.getPreambul().accept(aVisitor);
        }
        for (TypeID bean : aBean.getOsaOrPunktOrSisuTekst()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaViideType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (LisaViideType.LisaViit bean : aBean.getLisaViit()) {
            bean.accept(aVisitor);
        }
        if (aBean.getLisaPealkiri() != null) {
            aBean.getLisaPealkiri().accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaViideType.LisaPealkiri aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getLisaNimi() != null) {
            aBean.getLisaNimi().accept(aVisitor);
        }
        if (aBean.getVeaparandus() != null) {
            aBean.getVeaparandus().accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
    }

    @Override
    public void traverse(LisaViideType.LisaViit aBean, Visitor<?, E> aVisitor)
            throws E {
        for (TekstType bean : aBean.getSisuTekst()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(Loend aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getNumber() != null) {
            aBean.getNumber().accept(aVisitor);
        }
        if (aBean.getTaht() != null) {
            aBean.getTaht().accept(aVisitor);
        }
        if (aBean.getTavatekst() != null) {
            aBean.getTavatekst().accept(aVisitor);
        }
    }

    @Override
    public void traverse(LoigeType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getLoigeNr() != null) {
            aBean.getLoigeNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        for (TekstType bean : aBean.getSisuTekst()) {
            bean.accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (AlampunktType bean : aBean.getAlampunkt()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(LoigeType.LoigeNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(MetaandmedType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getLyhend() != null) {
            aBean.getLyhend().accept(aVisitor);
        }
        for (StringID bean : aBean.getMarksona()) {
            bean.accept(aVisitor);
        }
        if (aBean.getJuurdepaasPiirang() != null) {
            aBean.getJuurdepaasPiirang().accept(aVisitor);
        }
        if (aBean.getVastuvoetud() != null) {
            aBean.getVastuvoetud().accept(aVisitor);
        }
        if (aBean.getEmsNr() != null) {
            aBean.getEmsNr().accept(aVisitor);
        }
        if (aBean.getValjakuulutamine() != null) {
            aBean.getValjakuulutamine().accept(aVisitor);
        }
        if (aBean.getAvaldamismarge() != null) {
            aBean.getAvaldamismarge().accept(aVisitor);
        }
        if (aBean.getKehtivus() != null) {
            aBean.getKehtivus().accept(aVisitor);
        }
        if (aBean.getVersioon() != null) {
            aBean.getVersioon().accept(aVisitor);
        }
        if (aBean.getSkeemiNimi() != null) {
            aBean.getSkeemiNimi().accept(aVisitor);
        }
        if (aBean.getGlobaalID() != null) {
            aBean.getGlobaalID().accept(aVisitor);
        }
        if (aBean.getMetaandmedVersioonKuupaev() != null) {
            aBean.getMetaandmedVersioonKuupaev().accept(aVisitor);
        }
        if (aBean.getMetaandmedVersioonPohjustaja() != null) {
            aBean.getMetaandmedVersioonPohjustaja().accept(aVisitor);
        }
        if (aBean.getEesmark() != null) {
            aBean.getEesmark().accept(aVisitor);
        }
        for (MetaandmedType.VersiooniMuutus bean : aBean.getVersiooniMuutus()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(MetaandmedType.EmsNr aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getMenetlusNr() != null) {
            aBean.getMenetlusNr().accept(aVisitor);
        }
        if (aBean.getTahis() != null) {
            aBean.getTahis().accept(aVisitor);
        }
        if (aBean.getLugemiseNr() != null) {
            aBean.getLugemiseNr().accept(aVisitor);
        }
        if (aBean.getLugemiseKord() != null) {
            aBean.getLugemiseKord().accept(aVisitor);
        }
    }

    @Override
    public void traverse(MetaandmedType.Versioon aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getDokumentVersioonKuupaev() != null) {
            aBean.getDokumentVersioonKuupaev().accept(aVisitor);
        }
    }

    @Override
    public void traverse(MetaandmedType.VersiooniMuutus aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getMetaandmedVersioonKuupaev() != null) {
            aBean.getMetaandmedVersioonKuupaev().accept(aVisitor);
        }
        if (aBean.getMetaandmedVersioonPohjustaja() != null) {
            aBean.getMetaandmedVersioonPohjustaja().accept(aVisitor);
        }
    }

    @Override
    public void traverse(MuuJaotisType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getJaotusNumber() != null) {
            aBean.getJaotusNumber().accept(aVisitor);
        }
        for (TekstType bean : aBean.getJaotusTekst()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(MuuJaotisType.JaotusNumber aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(MuutmismargeType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (JAXBElement<?> obj : aBean.getTavatekstOrAktikuupaevOrAvaldamismarge()) {
            if (obj.getValue() instanceof Visitable) {
                ((Visitable) obj.getValue()).accept(aVisitor);
            }
        }
    }

    @Override
    public void traverse(NonNegativeIntegerID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(Normtehnmarkus aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getNormtehnmarkusNr() != null) {
            aBean.getNormtehnmarkusNr().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkusTekst() != null) {
            aBean.getNormtehnmarkusTekst().accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
    }

    @Override
    public void traverse(Oigusakt aBean, Visitor<?, E> aVisitor)
            throws E {
        for (MetaandmedType bean : aBean.getMetaandmed()) {
            bean.accept(aVisitor);
        }
        if (aBean.getAktinimi() != null) {
            aBean.getAktinimi().accept(aVisitor);
        }
        for (MuutmismargeType bean : aBean.getMuutmismarge()) {
            bean.accept(aVisitor);
        }
        if (aBean.getSisu() != null) {
            aBean.getSisu().accept(aVisitor);
        }
        for (Normtehnmarkus bean : aBean.getNormtehnmarkus()) {
            bean.accept(aVisitor);
        }
        for (Allkiri bean : aBean.getAllkiri()) {
            bean.accept(aVisitor);
        }
        if (aBean.getAlgatusmarge() != null) {
            aBean.getAlgatusmarge().accept(aVisitor);
        }
        for (LisaViideType bean : aBean.getLisaViide()) {
            bean.accept(aVisitor);
        }
        for (LisaType bean : aBean.getLisa()) {
            bean.accept(aVisitor);
        }
        if (aBean.getSeletuskiri() != null) {
            aBean.getSeletuskiri().accept(aVisitor);
        }
        for (Isik bean : aBean.getIsik()) {
            bean.accept(aVisitor);
        }
        for (JalgiMuudatusi bean : aBean.getJalgiMuudatusi()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(OsaType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getOsaNr() != null) {
            aBean.getOsaNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getOsaPealkiri() != null) {
            aBean.getOsaPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (PeatykkType bean : aBean.getPeatykk()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(OsaType.OsaNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(ParagrahvType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getParagrahvNr() != null) {
            aBean.getParagrahvNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getParagrahvPealkiri() != null) {
            aBean.getParagrahvPealkiri().accept(aVisitor);
        }
        for (TekstType bean : aBean.getSisuTekst()) {
            bean.accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (LoigeType bean : aBean.getLoige()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(ParagrahvType.ParagrahvNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(PealkiriType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getPealkiri() != null) {
            aBean.getPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(PeatykkType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (PeatykkType.PeatykkNr bean : aBean.getPeatykkNr()) {
            bean.accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        if (aBean.getPeatykkPealkiri() != null) {
            aBean.getPeatykkPealkiri().accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (TypeID bean : aBean.getJaguOrParagrahv()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(PeatykkType.PeatykkNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(PiirangLoppType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getPiirangLoppKuupaev() != null) {
            aBean.getPiirangLoppKuupaev().accept(aVisitor);
        }
        if (aBean.getPiirangLoppSyndmus() != null) {
            aBean.getPiirangLoppSyndmus().accept(aVisitor);
        }
    }

    @Override
    public void traverse(PiirangPikendamineType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getPikendamineAlgus() != null) {
            aBean.getPikendamineAlgus().accept(aVisitor);
        }
        if (aBean.getPikendamineLopp() != null) {
            aBean.getPikendamineLopp().accept(aVisitor);
        }
        if (aBean.getPikendamineAlus() != null) {
            aBean.getPikendamineAlus().accept(aVisitor);
        }
    }

    @Override
    public void traverse(PreambulType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (Object bean : aBean.getTavatekstOrViide()) {
            if (bean instanceof Visitable) {
                ((Visitable) bean).accept(aVisitor);
            } else {
                if (bean instanceof JAXBElement<?>) {
                    if (((JAXBElement<?>) bean).getValue() instanceof Visitable) {
                        ((Visitable) ((JAXBElement<?>) bean).getValue()).accept(aVisitor);
                    }
                }
            }
        }
        for (Normtehnmarkus bean : aBean.getNormtehnmarkus()) {
            bean.accept(aVisitor);
        }
        for (VeaparandusType bean : aBean.getVeaparandus()) {
            bean.accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(PreambulType.Viide aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getTeostaja() instanceof Visitable) {
            ((Visitable) aBean.getTeostaja()).accept(aVisitor);
        }
        if (aBean.getKuvatavTekst() != null) {
            aBean.getKuvatavTekst().accept(aVisitor);
        }
        if (aBean.getViideURID() != null) {
            aBean.getViideURID().accept(aVisitor);
        }
        if (aBean.getViideValine() != null) {
            aBean.getViideValine().accept(aVisitor);
        }
        if (aBean.getViideAkt() != null) {
            aBean.getViideAkt().accept(aVisitor);
        }
    }

    @Override
    public void traverse(PunktType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getPunktNr() != null) {
            aBean.getPunktNr().accept(aVisitor);
        }
        if (aBean.getKuvatavNr() != null) {
            aBean.getKuvatavNr().accept(aVisitor);
        }
        for (TekstType bean : aBean.getSisuTekst()) {
            bean.accept(aVisitor);
        }
        if (aBean.getNormtehnmarkus() != null) {
            aBean.getNormtehnmarkus().accept(aVisitor);
        }
        if (aBean.getVeaparandus() != null) {
            aBean.getVeaparandus().accept(aVisitor);
        }
        if (aBean.getMuutmismarge() != null) {
            aBean.getMuutmismarge().accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (AlampunktType bean : aBean.getAlampunkt()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(PunktType.PunktNr aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(SeletuskiriLisaType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getSeletuskirjaLisaPealkiri() != null) {
            aBean.getSeletuskirjaLisaPealkiri().accept(aVisitor);
        }
        if (aBean.getSeletuskirjaLisaSisu() != null) {
            aBean.getSeletuskirjaLisaSisu().accept(aVisitor);
        }
    }

    @Override
    public void traverse(SeletuskiriLisaType.SeletuskirjaLisaSisu aBean, Visitor<?, E> aVisitor)
            throws E {
        for (LisaType bean : aBean.getLisa()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(SeletuskiriOsaType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getSeletuskirjaOsaPealkiri() != null) {
            aBean.getSeletuskirjaOsaPealkiri().accept(aVisitor);
        }
        if (aBean.getSeletuskirjaOsaSisu() != null) {
            aBean.getSeletuskirjaOsaSisu().accept(aVisitor);
        }
    }

    @Override
    public void traverse(SeletuskiriOsaType.SeletuskirjaOsaSisu aBean, Visitor<?, E> aVisitor)
            throws E {
        for (TekstType bean : aBean.getSisuTekst()) {
            bean.accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(SeletuskiriType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getSeletuskiriPealkiri() != null) {
            aBean.getSeletuskiriPealkiri().accept(aVisitor);
        }
        if (aBean.getSeletuskiriSissejuhatus() != null) {
            aBean.getSeletuskiriSissejuhatus().accept(aVisitor);
        }
        if (aBean.getSeletuskiriEesmark() != null) {
            aBean.getSeletuskiriEesmark().accept(aVisitor);
        }
        if (aBean.getSeletuskiriAnalyysYld() != null) {
            aBean.getSeletuskiriAnalyysYld().accept(aVisitor);
        }
        if (aBean.getSeletuskiriTerminoloogia() != null) {
            aBean.getSeletuskiriTerminoloogia().accept(aVisitor);
        }
        if (aBean.getSeletuskiriVastavusEL() != null) {
            aBean.getSeletuskiriVastavusEL().accept(aVisitor);
        }
        if (aBean.getSeletuskiriMoju() != null) {
            aBean.getSeletuskiriMoju().accept(aVisitor);
        }
        if (aBean.getSeletuskiriKulutulu() != null) {
            aBean.getSeletuskiriKulutulu().accept(aVisitor);
        }
        if (aBean.getSeletuskiriRakendusaktid() != null) {
            aBean.getSeletuskiriRakendusaktid().accept(aVisitor);
        }
        if (aBean.getSeletuskiriVaba() != null) {
            aBean.getSeletuskiriVaba().accept(aVisitor);
        }
        if (aBean.getSeletuskiriJoustumine() != null) {
            aBean.getSeletuskiriJoustumine().accept(aVisitor);
        }
        for (Normtehnmarkus bean : aBean.getNormtehnmarkus()) {
            bean.accept(aVisitor);
        }
        for (Kommentaar bean : aBean.getKommentaar()) {
            bean.accept(aVisitor);
        }
        for (AllkirjastajaType bean : aBean.getSeletuskiriAllkirjastaja()) {
            bean.accept(aVisitor);
        }
        for (SeletuskiriLisaType bean : aBean.getSeletuskiriLisa()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(SisuType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getPreambul() != null) {
            aBean.getPreambul().accept(aVisitor);
        }
        if (aBean.getVeaparandus() != null) {
            aBean.getVeaparandus().accept(aVisitor);
        }
        for (TypeID bean : aBean.getOsaOrParagrahvOrPeatykk()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(StringID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(TabelType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getTabelPealkiri() != null) {
            aBean.getTabelPealkiri().accept(aVisitor);
        }
        for (TabelType.Tr bean : aBean.getTr()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(TabelType.Tr aBean, Visitor<?, E> aVisitor)
            throws E {
        for (TabelType.Tr.Tc bean : aBean.getTc()) {
            bean.accept(aVisitor);
        }
    }

    @Override
    public void traverse(TabelType.Tr.Tc aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getSisuTekst() != null) {
            aBean.getSisuTekst().accept(aVisitor);
        }
    }

    @Override
    public void traverse(TavatekstID aBean, Visitor<?, E> aVisitor)
            throws E {
        for (Object bean : aBean.getContent()) {
            if (bean instanceof Visitable) {
                ((Visitable) bean).accept(aVisitor);
            } else {
                if (bean instanceof JAXBElement<?>) {
                    if (((JAXBElement<?>) bean).getValue() instanceof Visitable) {
                        ((Visitable) ((JAXBElement<?>) bean).getValue()).accept(aVisitor);
                    }
                }
            }
        }
        if (aBean.getTeostaja() instanceof Visitable) {
            ((Visitable) aBean.getTeostaja()).accept(aVisitor);
        }
    }

    @Override
    public void traverse(TekstType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (Object bean : aBean.getTabelOrTavatekstOrLegaaldefinitsioon()) {
            if (bean instanceof Visitable) {
                ((Visitable) bean).accept(aVisitor);
            } else {
                if (bean instanceof JAXBElement<?>) {
                    if (((JAXBElement<?>) bean).getValue() instanceof Visitable) {
                        ((Visitable) ((JAXBElement<?>) bean).getValue()).accept(aVisitor);
                    }
                }
            }
        }
    }

    @Override
    public void traverse(TekstType.Fail aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(TekstType.Viide aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getTeostaja() instanceof Visitable) {
            ((Visitable) aBean.getTeostaja()).accept(aVisitor);
        }
        if (aBean.getKuvatavTekst() != null) {
            aBean.getKuvatavTekst().accept(aVisitor);
        }
        if (aBean.getViideURID() != null) {
            aBean.getViideURID().accept(aVisitor);
        }
        if (aBean.getViideValine() != null) {
            aBean.getViideValine().accept(aVisitor);
        }
        if (aBean.getViideAkt() != null) {
            aBean.getViideAkt().accept(aVisitor);
        }
    }

    @Override
    public void traverse(TimeID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(TypeID aBean, Visitor<?, E> aVisitor)
            throws E {
    }

    @Override
    public void traverse(Valjakuulutamine aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getValjakuulutatud() != null) {
            aBean.getValjakuulutatud().accept(aVisitor);
        }
    }

    @Override
    public void traverse(ValjakuulutatudType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getKellepoolt() != null) {
            aBean.getKellepoolt().accept(aVisitor);
        }
        if (aBean.getKuupaev() != null) {
            aBean.getKuupaev().accept(aVisitor);
        }
        if (aBean.getOtsusnr() != null) {
            aBean.getOtsusnr().accept(aVisitor);
        }
    }

    @Override
    public void traverse(VastuvoetudType aBean, Visitor<?, E> aVisitor)
            throws E {
        for (JAXBElement<?> obj : aBean.getTavatekstOrAktikuupaevOrAvaldamismarge()) {
            if (obj.getValue() instanceof Visitable) {
                ((Visitable) obj.getValue()).accept(aVisitor);
            }
        }
    }

    @Override
    public void traverse(VeaparandusType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getVeaparandusKuupaev() != null) {
            aBean.getVeaparandusKuupaev().accept(aVisitor);
        }
        if (aBean.getVeaparandusKellaaeg() != null) {
            aBean.getVeaparandusKellaaeg().accept(aVisitor);
        }
        if (aBean.getVeaparandusTekst() != null) {
            aBean.getVeaparandusTekst().accept(aVisitor);
        }
    }

    @Override
    public void traverse(ViideType aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getKuvatavTekst() != null) {
            aBean.getKuvatavTekst().accept(aVisitor);
        }
        if (aBean.getViideURID() != null) {
            aBean.getViideURID().accept(aVisitor);
        }
        if (aBean.getViideValine() != null) {
            aBean.getViideValine().accept(aVisitor);
        }
        if (aBean.getViideAkt() != null) {
            aBean.getViideAkt().accept(aVisitor);
        }
    }

    @Override
    public void traverse(ViideType.ViideAkt aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getViideRT() != null) {
            aBean.getViideRT().accept(aVisitor);
        }
        if (aBean.getViidePunkt() != null) {
            aBean.getViidePunkt().accept(aVisitor);
        }
        if (aBean.getViideID() != null) {
            aBean.getViideID().accept(aVisitor);
        }
    }

    @Override
    public void traverse(ViideType.ViideURID aBean, Visitor<?, E> aVisitor)
            throws E {
        if (aBean.getViideURI() != null) {
            aBean.getViideURI().accept(aVisitor);
        }
        if (aBean.getViideID() != null) {
            aBean.getViideID().accept(aVisitor);
        }
    }

}
