package org.example.visitor;

import jakarta.annotation.Generated;
import org.example.imported.ImportedData;
import org.example.imported.ImportedType;
import org.example.simple.ChoiceElement;
import org.example.simple.ComplexObject;
import org.example.simple.HasJAXBElement;
import org.example.simple.Problem;
import org.example.simple.Recursive;
import org.example.simple.TSimpleRequest;
import org.example.simple.TSimpleResponse;

@Generated("Generated by jaxb-visitor")
public interface Traverser<E extends Throwable> {


    void traverseImportedData(ImportedData aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseImportedType(ImportedType aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseMessage(ImportedType.Message aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseChoiceElement(ChoiceElement aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseComplexObject(ComplexObject aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseLocalElement(ComplexObject.LocalElement aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseHasJAXBElement(HasJAXBElement aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseProblem(Problem aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseRecursive(Recursive aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseTSimpleRequest(TSimpleRequest aBean, Visitor<?, E> aVisitor)
            throws E
            ;

    void traverseTSimpleResponse(TSimpleResponse aBean, Visitor<?, E> aVisitor)
            throws E
            ;

}
