package org.example.visitor;

import jakarta.annotation.Generated;
import org.example.imported.ImportedData;
import org.example.imported.ImportedType;
import org.example.simple.ChoiceElement;
import org.example.simple.ComplexObject;
import org.example.simple.HasJAXBElement;
import org.example.simple.Problem;
import org.example.simple.Recursive;
import org.example.simple.TSimpleRequest;
import org.example.simple.TSimpleResponse;

@Generated("Generated by jaxb-visitor")
public class BaseVisitor<R, E extends Throwable>
        implements Visitor<R, E> {


    @Override
    public R visitImportedData(ImportedData aBean)
            throws E {
        return null;
    }

    @Override
    public R visitImportedType(ImportedType aBean)
            throws E {
        return null;
    }

    @Override
    public R visitMessage(ImportedType.Message aBean)
            throws E {
        return null;
    }

    @Override
    public R visitChoiceElement(ChoiceElement aBean)
            throws E {
        return null;
    }

    @Override
    public R visitComplexObject(ComplexObject aBean)
            throws E {
        return null;
    }

    @Override
    public R visitLocalElement(ComplexObject.LocalElement aBean)
            throws E {
        return null;
    }

    @Override
    public R visitHasJAXBElement(HasJAXBElement aBean)
            throws E {
        return null;
    }

    @Override
    public R visitProblem(Problem aBean)
            throws E {
        return null;
    }

    @Override
    public R visitRecursive(Recursive aBean)
            throws E {
        return null;
    }

    @Override
    public R visitTSimpleRequest(TSimpleRequest aBean)
            throws E {
        return null;
    }

    @Override
    public R visitTSimpleResponse(TSimpleResponse aBean)
            throws E {
        return null;
    }

}
